import time
from datetime import datetime
from random import randrange
import vk_api
from vk_api.longpoll import VkLongPoll
from database.database import *
from api.vkontake import VkAPI


# –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–∞, –Ω–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def search_sex_partner(user: User, vk_api_with_group_token):
    vk_api_with_person_token = vk_api.VkApi(token=user_token)
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    request_data = set_search_parameters(user)
    result = vk_api_with_person_token.method("users.search", request_data)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª–æ–≤—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
    text = f"üòç –ú—ã –Ω–∞—à–ª–∏ –¥–ª—è –≤–∞—Å –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤—ã—Ö –∫ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º!"
    VkAPI.write_msg(user, text, vk_api_with_group_token)
    time.sleep(2)

    i = 1
    for data in result['items']:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ —ç—Ç–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –µ–≥–æ —Ä–∞–Ω–µ–µ
        if not db_check_is_new_partner(user.id, data['id']):
            continue
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        try:
            photos = VkAPI.get_photos_of_person(data['id'], vk_api_with_person_token)
            main_photo_url = photos[0]['sizes'][0]['url']
        except:
            continue
        # –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è
        partner = Partner(data['id'])
        partner.set_first_name(data['first_name'])
        partner.set_last_name(data['last_name'])
        full_name = partner.first_name + " " + partner.last_name
        text = f"–ö–∞–Ω–¥–∏–¥–∞—Ç #{i}\n"
        text += f"–ò–º—è: {full_name}"
        partner.set_main_photo(main_photo_url)
        VkAPI.write_msg(user, text, vk_api_with_group_token)

        # –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç —Ü–∏–∫–ª–∞
        i = i + 1

        # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ
        partner.generate_profile_url()
        text = f"–ü—Ä–æ—Ñ–∏–ª—å: {partner.profile_url}"
        VkAPI.write_msg(user, text, vk_api_with_group_token)

        # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        show_partner_photos(partner, photos, user, vk_api_with_group_token)

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db_insert_partner(partner)

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —á—Ç–æ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω
        db_insert_user_partner(user.id, data['id'])

        # –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫–∞–∑ –µ—â–µ –æ–¥–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
        VkAPI.write_msg(user, "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ?", vk_api_with_group_token)

        while True:
            answer_of_user = VkAPI.wait_for_answer_from_user(VkLongPoll(vk_api_with_group_token))['text']
            if answer_of_user == "–î–∞":
                break
            elif answer_of_user == "–ù–µ—Ç":
                text = "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –æ–∫–æ–Ω—á–µ–Ω. –î–æ—Å–≤–∏–¥–∞–Ω–∏—è!"
                VkAPI.write_msg(user, text, vk_api_with_group_token)
                return
            else:
                text = "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç..."
                VkAPI.write_msg(user, text, vk_api_with_group_token)


# –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–∞—Ä–Ω—Ç—ë—Ä–∞
def show_partner_photos(partner, photos, user, vk_api_with_group_token):
    z = 0
    for photo in photos:
        if z == 3:
            break
        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
        attachament = partner.generate_photo_attachment_link(photo['id'])
        photo_data = {
            'user_id': user.id,
            'message': "",
            'attachment': attachament,
            'random_id': randrange(10 ** 7)
        }
        vk_api_with_group_token.method('messages.send', photo_data)
        z = z + 1


# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞
def set_search_parameters(user):
    # –ü–æ–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ç–∏–≤–æ–ª–æ–∂–Ω—ã–º
    sex_partner = 0
    if user.sex == 1:
        sex_partner = 2
    else:
        sex_partner = 1
    # –ì–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    city_id = user.city_id
    # –í–æ–∑—Ä–∞—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞
    age = int(user.age)
    age_from = age - 2
    age_to = age + 2
    request_data = {
        "sex": sex_partner,  # –ø–æ–ª –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
        "count": 1000,  # –∫–æ–ª-–≤–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        "city": city_id,
        "status": 6,  # –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ
        "age_from": age_from,  # –≤–æ–∑—Ä–∞—Ç "–æ—Ç"
        "age_to": age_to,  # –≤–æ–∑—Ä–∞—Å—Ç "–¥–æ"
        "has_photo": 1,  # —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ê–ü–ò –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
        "fields": {
            "first_name", "last_name", "city", "bdate",
        }
    }
    return request_data


# –í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –º–µ–Ω—é "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–∞—Ä—ã –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"
def menu_start_search(user: User, vk):
    text = "–ê–Ω–∞–ª–∏–∑–∏—É–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ..."
    VkAPI.write_msg(user, text, vk)

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –ø–∏—à–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    set_info_about_user(user, vk)
    db_insert_user(user)

    # –ü—Ä–∏–∑—ã–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–µ–π—Å—Ç–≤–∏—é
    VkAPI.write_msg(user, r"–ù–∞–∂–º–∏—Ç–µ '–î–∞', –µ—Å–ª–∏ –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å ‚ô•", vk)

    # –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç
    while True:
        answer_of_user = VkAPI.wait_for_answer_from_user(VkLongPoll(vk))['text']
        if answer_of_user == "–î–∞":
            search_sex_partner(user, vk_api_with_group_token=vk)
            break
        elif answer_of_user == "–ù–µ—Ç":
            text = "–û–¥–∏–Ω–æ–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –æ—Ç–≤–µ—Ç :)"
            VkAPI.write_msg(user, text, vk)
            start_bot_execution()
            break
        else:
            text = "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –µ—â–µ —Ä–∞–∑..."
            VkAPI.write_msg(user, text, vk)


# –ó–∞–ø–æ–ª–Ω—è–µ–º –≤ —ç–∫–∑–µ–º–ª–ø—è—Ä –∫–ª–∞—Å—Å–∞ User –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
def set_info_about_user(user: User, vk) -> dict:
    # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    VkAPI.write_msg(user, f"[+] –í–∞—à id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}", vk)
    # –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ–¥
    city = VkAPI.get_user_city(user, vk)
    user.set_city_title(city['title'])
    user.set_city_id(city['id'])
    VkAPI.write_msg(user, f"[+] –í–∞—à –≥–æ—Ä–æ–¥: {user.city_title}", vk)
    # –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª
    sex = VkAPI.get_user_sex(user, vk)
    user.set_sex(sex)
    user_sex_text = "–ñ–µ–Ω—Å–∫–∏–π" if user.sex == 1 else "–ú—É–∂—Å–∫–æ–π"
    VkAPI.write_msg(user, f"[+] –í–∞—à –ø–æ–ª: {user_sex_text}", vk)
    # –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç
    age = VkAPI.get_user_age(user, vk)
    user.set_age(age)
    VkAPI.write_msg(user, f"[+] –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {user.age}", vk)


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def show_top_menu(longpoll, user, vk):
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! \n\n"
    VkAPI.write_msg(user, text, vk)
    show_sub_menu(user, vk)
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    while True:
        # –∂–¥–µ–º –∫–∞–∫–æ–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –≤–≤–µ–¥–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        answer_of_user = VkAPI.wait_for_answer_from_user(longpoll)['text']
        # 1 => –ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π
        if answer_of_user == "–î–∞":
            menu_start_search(user, vk)
            break
        # 2 => –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º–∞, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª 2 –ø—É–Ω–∫—Ç –º–µ–Ω—é
        elif answer_of_user == "–ù–µ—Ç":
            break
        # ... –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
        else:
            text = "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...\n"
            VkAPI.write_msg(user, text, vk)
            time.sleep(1)
            show_sub_menu(user, vk)


# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–º–µ–Ω—é
def show_sub_menu(user: User, vk):
    text = "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–∞—Ä—ã –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤?"
    VkAPI.write_msg(user, text, vk)


def start_bot_execution():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω—ã—ã—Ö
    init_database()

    # –ò–Ω–∏—Ü–∏–∏–∞–ª–∏–∑–∏—Ä—É–µ–º vk_api
    vk = vk_api.VkApi(token=group_token)
    longpoll = VkLongPoll(vk)

    # –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–æ–º –ø—Ä–∏—à–µ–¥—à–∏–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ user_id
    user_data = VkAPI.wait_for_answer_from_user(longpoll)
    user = User(user_data['user_id'])

    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    show_top_menu(longpoll, user, vk)


if __name__ == '__main__':
    print("Start bot execution:", datetime.now())
    start_bot_execution()
